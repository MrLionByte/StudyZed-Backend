# version: '3.8'
services:
  session_task_db:
    container_name: session_task_db
    image: postgres:16
    ports:
      - "5436:5432"
    volumes:
      - session_task_db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=session_task_management_studyzed
      - POSTGRES_USER=fmn
      - POSTGRES_PASSWORD=mrlionbyte
    # healthcheck:
    #   test: ["CMD-SHELL", "pg_isready -U fmn"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5
  
  session_and_task_management:
    container_name: session_and_task_management
    build: 
      context: ./Session_And_Task_Management_Service/Session_And_Task_Management
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "8009:8000"
    depends_on:
      - session_task_db
      - kafka
    volumes:
      - ./Session_And_Task_Management_Service/Session_And_Task_Management:/app
    
    
    # healthcheck:
    #   test: ["CMD-SHELL", "echo > /dev/tcp/kafka/9092"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5
  
  payment_db:
    container_name: payment_db
    image: postgres:16
    ports:
      - "5437:5432"
    volumes:
      - payment_db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=payment_studyzed
      - POSTGRES_USER=fmn
      - POSTGRES_PASSWORD=mrlionbyte
    # healthcheck:
    #   test: ["CMD-SHELL", "pg_isready -U fmn"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5
  
  payment_management:
    container_name: payment_management
    build: 
      context: ./Payment_Service/Payment
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000 
    ports:
      - "8008:8000"
    depends_on:
      - payment_db
      - kafka
    volumes:
      - ./Payment_Service/Payment:/app
    # command: supervisord -c /etc/supervisor/conf.d/supervisord.conf

  messages_management:
    container_name: messages_management
    build: 
      context: ./Message_And_Video_Service/Message
      dockerfile: Dockerfile
    command: daphne -b 0.0.0.0 -p 8000 Message.asgi:application
    environment:
      - DJANGO_SETTINGS_MODULE=Message.settings
    ports:
      - "8006:8000"
    volumes:
      - ./Message_And_Video_Service/Message:/app

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_LOG4J_PROP=log4j.rootLogger=OFF, stdout
    volumes:
      - zookeeper_data:/bitnami/zookeeper

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_LOG4J_OPTS=-Dlog4j.rootLogger=OFF
    depends_on:
      - zookeeper
    volumes:
      - kafka_data:/bitnami/kafka
    restart: on-failure

  redis:
    image: redis:6-alpine
    container_name: redis_service_2
    ports:
      - "6378:6379"
    volumes:
      - redis_data:/data

  # nginx:
  #   container_name: nginx
  #   image: nginx:latest
  #   ports:
  #     - "80:80"
  #   depends_on:
  #     - session_and_task_management
  #     - payment_management
  #     # - another_service
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #   restart: always


volumes:
  session_task_db:
  payment_db:
  kafka_data:
  zookeeper_data:
  redis_data:
